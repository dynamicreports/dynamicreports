<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.sourceforge.dynamicreports</groupId>
        <artifactId>dynamicreports-parent</artifactId>
        <version>6.20.0-SNAPSHOT</version>
    </parent>

    <artifactId>dynamicreports-core</artifactId>
    <packaging>jar</packaging>

    <name>DynamicReports - core</name>
    <url>https://github.com/dynamicreports</url>
    <description>
        DynamicReports is an open source Java reporting library based on
        JasperReports. It allows to create dynamic report designs and it doesn't
        need a visual report designer.
        You can very quickly create reports and produce documents that can be
        displayed, printed or exported into many popular formats such as PDF,
        Excel, Word and others.
    </description>
    <distributionManagement>
        <snapshotRepository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
    <properties>
        <!--Environment -->
        <encoding>UTF-8</encoding>
        <sourceVersion>17</sourceVersion>
        <targetVersion>17</targetVersion>
        <lint>deprecation</lint>
        <lint>unchecked</lint>
        <illegal-access>warn</illegal-access>
    </properties>

    <dependencies>
        <dependency>
            <groupId>net.sf.jasperreports</groupId>
            <artifactId>jasperreports</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>core</artifactId>
            <version>3.5.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sf.barcode4j</groupId>
            <artifactId>barcode4j</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.barbecue</groupId>
            <artifactId>barbecue</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-bridge</artifactId>
            <scope>compile</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>${jaxb-apiVersion}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-core -->
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-core</artifactId>
            <version>${jaxb-coreVersion}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-core -->
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-core</artifactId>
            <version>${jaxb-coreVersion}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-impl -->
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>${jaxb-implVersion}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>xmlgraphics-commons</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jvnet.jaxb2.maven2</groupId>
                <artifactId>maven-jaxb23-plugin</artifactId>
                <configuration>
                    <schemaIncludes>
                        <schemaInclude>**/dynamicreports.xsd</schemaInclude>
                    </schemaIncludes>
                    <bindingIncludes>
                        <bindingInclude>**/dynamicreports.xjb</bindingInclude>
                    </bindingIncludes>
                    <removeOldOutput>true</removeOldOutput>
                </configuration>
                <executions>
                    <execution>
                        <id>jaxb</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${basedir}/target/generated-sources/xjc</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${sourceVersion}</source>
                    <target>${targetVersion}</target>
                    <encoding>${encoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <encoding>UTF-8</encoding>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>run-checkstyle</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>checkstyle</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>module-info.java</excludes>
                    <sourceDirectories>
                        <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                    </sourceDirectories>
                    <headerLocation>../src/etc/checkstyle.xml</headerLocation>
                    <maxAllowedViolations>
                        ${checkstyle.config.maxAllowedViolations}</maxAllowedViolations>
                    <configLocation>../src/etc/checkstyle.xml</configLocation>
                    <consoleOutput>${checkstyle.config.consoleOutput}</consoleOutput>
                    <failsOnError>${checkstyle.config.failsOnError}</failsOnError>
                    <includeResources>${checkstyle.config.includeResources}</includeResources>
                    <includeTestResources>
                        ${checkstyle.config.includeTestResources}</includeTestResources>
                    <includeTestSourceDirectory>
                        ${checkstyle.config.includeTestSourceDirectory}</includeTestSourceDirectory>
                    <linkXRef>${linkXRef}</linkXRef>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <failOnError>false</failOnError>
                    <sourceFileExcludes>
                        <sourceFileExclude>
                            ${project.basedir}/dynamicreports-core/target</sourceFileExclude>
                    </sourceFileExcludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>license</id>
            <activation>
                <property>
                    <name>profile</name>
                    <value>license</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.mycila</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <version>${license-maven-plugin-version}</version>
                        <configuration>
                            <header>../src/etc/license_header.txt</header>
                            <headerDefinitions>../src/etc/header_definition.xml</headerDefinitions>
                            <properties>
                                <owner>${license.maven.owner}</owner>
                            </properties>
                            <includes>
                                <include>**/*.java</include>
                            </includes>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>checkstyle</id>
            <activation>
                <!--Activate automagically when source profile is online-->
                <property>
                    <name>profile</name>
                    <value>checkstyle</value>
                </property>
            </activation>
            <!--Attach to validations during build-->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <executions>
                            <execution>
                                <!--Could run with mvn clean verify-->
                                <id>validate</id>
                                <phase>validate</phase>
                                <configuration>
                                    <encoding>UTF-8</encoding>
                                </configuration>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>run-checkstyle</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>checkstyle</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <excludes>module-info.java</excludes>
                            <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                            <headerLocation>../src/etc/checkstyle.xml</headerLocation>
                            <maxAllowedViolations>
                                ${checkstyle.config.maxAllowedViolations}</maxAllowedViolations>
                            <configLocation>../src/etc/checkstyle.xml</configLocation>
                            <consoleOutput>${checkstyle.config.consoleOutput}</consoleOutput>
                            <failsOnError>${checkstyle.config.failsOnError}</failsOnError>
                            <includeResources>
                                ${checkstyle.config.includeResources}</includeResources>
                            <includeTestResources>
                                ${checkstyle.config.includeTestResources}</includeTestResources>
                            <includeTestSourceDirectory>
                                ${checkstyle.config.includeTestSourceDirectory}</includeTestSourceDirectory>
                            <linkXRef>${linkXRef}</linkXRef>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
